apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: expense
  labels:
    tier: database
spec:
  selector:
    matchLabels:
      app: mysql
      tier: db
      project: expense # has to match .spec.template.metadata.labels
  serviceName: "mysql"
  replicas: 2
  template:
    metadata:
      labels:
        app: mysql
        tier: db 
        project: expense # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: mysql
        image: srikanthhg/mysql:expense

        # env:
        # - name: MYSQL_ROOT_PASSWORD # This is the name of the environment variable in linux machine
        #   valueFrom:
        #     secretKeyRef:
        #       name: mysql  # This is the name of the secret
        #       key: MYSQL_ROOT_PASSWORD   # This is the key in the secret   ---working good

        # envFrom:
        #   - secretRef:
        #       name: mysql       #name of the secret   ---working good
        command:
          - "sh"
          - "-c"
          - |
            # Ensure that the root password is read from the file
            # We're overriding the default entrypoint (/entrypoint.sh mysqld) to ensure MySQL uses the root password from the mounted file.
            export MYSQL_ROOT_PASSWORD=$(cat /etc/mysql-secret/MYSQL_ROOT_PASSWORD) && exec /entrypoint.sh mysqld
        volumeMounts:
        - name: mysql-secret-volume
          mountPath: "/etc/mysql-secret"
          readOnly: true
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-secret-volume
        secret:
          secretName: mysql # Provide the name of the secret you want to mount. 

  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: ebs-sc
      resources:
        requests:
          storage: 1Gi